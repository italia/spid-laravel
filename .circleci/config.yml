version: 2.1

orbs:
  codecov: codecov/codecov@3.2.2

commands:
  restore_all_caches:
    description: Restore php dependencies
    steps:
      - restore_cache:
          keys:
          - v1-php-{{ checksum "composer.lock" }}
          # fallback to using the latest cache if no exact match is found
          - v1-php-

  xdebug:
    description: Install Xdebug and set coverage mode
    steps:
      - run:
          command: |
            sudo -E install-php-extensions xdebug
            sudo docker-php-ext-enable xdebug
            echo "xdebug.mode = coverage" | sudo tee -a /etc/php.d/circleci.ini

  composer:
    description: Ensure all php dependencies are installed
    parameters:
      laravel-version:
        type: string
        default: ""
    steps:
      - run:
          name: Self-update composer
          command: sudo composer self-update

      - when:
          condition: << parameters.laravel-version >>
          steps:
            - run:
                name: Install Laravel << parameters.laravel-version >> dependencies
                command: |
                  case << parameters.laravel-version >> in
                    9)
                      composer require --no-update "illuminate/config:^9.52.4" "illuminate/support:^9.52.4" "nesbot/carbon:^2.66"
                      composer require --dev --no-update "orchestra/testbench:^7.22.1" "phpunit/phpunit:^9.5.10"
                      ;;
                    10)
                      composer require --no-update "illuminate/config:^10.0" "illuminate/support:^10.0" "nesbot/carbon:^2.66"
                      composer require --dev --no-update "orchestra/testbench:^8.0" "phpunit/phpunit:^10.0"
                      ;;
                    11)
                      composer require --no-update "illuminate/config:^11.0" "illuminate/support:^11.0" "nesbot/carbon:^3.0"
                      composer require --dev --no-update "orchestra/testbench:^9.0" "phpunit/phpunit:^10.0"
                      ;;
                    12)
                      composer require --no-update "illuminate/config:^12.0" "illuminate/support:^12.0" "nesbot/carbon:^3.0"
                      composer require --dev --no-update "orchestra/testbench:^10.0" "phpunit/phpunit:^11.0"
                      ;;
                  esac

      - run:
          name: Run composer update
          command: composer update --prefer-dist --no-interaction --no-plugins

  structure-validation:
    description: Ensure package directory strucure is valid
    steps:
      - run:
          name: Run pds-skeleton validator
          command: vendor/bin/pds-skeleton validate

  php-cs-fixer:
    description: Ensure php code follows style rules
    steps:
      - run:
          name: Run php-cs-fixer (future mode)
          command: |
            PHP_CS_FIXER_FUTURE_MODE=1
            vendor/bin/php-cs-fixer fix --diff --dry-run --verbose

  security:
    description: Check known security issues in php dependencies
    steps:
      - run:
          name: Run security-checker
          command: |
            wget https://get.symfony.com/cli/installer -O - | bash
            sudo mv /home/circleci/.symfony5/bin/symfony /usr/local/bin/symfony
            symfony check:security

  save_all_caches:
    description: Save php and javascript dependencies
    steps:
      - save_cache:
          paths:
            - ./vendor
          key: v1-php-{{ checksum "composer.lock" }}

jobs:
  build:
    parameters:
      php-version:
        type: string
      laravel-version:
        type: string
    docker:
      - image: cimg/php:<< parameters.php-version >>
    environment:
      APP_ENV: "testing"
    steps:
      - checkout
      - restore_all_caches
      - xdebug
      - composer:
          laravel-version: << parameters.laravel-version >>
      - structure-validation
      - php-cs-fixer
      - security
      - save_all_caches
      # test
      - run:
          name: Run phpunit for Laravel << parameters.laravel-version >>
          command: |
            case << parameters.laravel-version >> in
              9)
                XDEBUG_MODE=coverage vendor/bin/phpunit -c phpunit-9.xml
                ;;
              10)
                XDEBUG_MODE=coverage vendor/bin/phpunit -c phpunit-10.xml
                ;;
              11)
                XDEBUG_MODE=coverage vendor/bin/phpunit -c phpunit-10.xml
                ;;
              12)
                XDEBUG_MODE=coverage vendor/bin/phpunit -c phpunit-11.xml
                ;;
            esac
      - codecov/upload

workflows:
  build:
    jobs:
      - build:
          name: "PHP << matrix.php-version >> - Laravel << matrix.laravel-version >>"
          matrix:
            parameters:
              php-version: ["8.2", "8.3"]
              laravel-version: ["9", "10", "11", "12"]
            exclude:
              # Laravel 9 only supports PHP 8.2
              - php-version: "8.3"
                laravel-version: "9"
